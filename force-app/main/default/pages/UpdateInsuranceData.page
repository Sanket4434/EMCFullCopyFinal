<apex:page sidebar="false" showHeader="false" lightningStylesheets="true" controller="UpdateInsuranceDataController">
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" lang="en">

    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8" />
        <meta http-equiv="x-ua-compatible" content="ie=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <!-- EMC Common Head -->
        <apex:include pageName="EMC_Common_Head" />
        <!-- Title of the page -->
        <title>Update Insurance</title>
        <apex:slds />
        <link href='https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/ui-lightness/jquery-ui.css' rel='stylesheet' />
        <script src="{!URLFOR($Resource.EmcCSS,'/emc-design/assets/jquery-datepicker/js/jquery.min.js')}"></script>
        <script src="{!URLFOR($Resource.EmcCSS,'/emc-design/assets/jquery-datepicker/js/jquery-ui.min.js')}" ></script>
        <script src="{!URLFOR($Resource.EMC_Header_Scripts,'EMC_Header_Scripts/js/angular.js')}"></script>
        <!--Toaster -->
        <script src="{!URLFOR($Resource.EMC_Header_Scripts,'EMC_Header_Scripts/js/toastr.min.js')}"></script>
        <link href="{!URLFOR($Resource.EMC_Header_Scripts,'EMC_Header_Scripts/css/toastr.min.css')}" rel="stylesheet" />
        <!-- Pagination -->
        <script src="{!URLFOR($Resource.dirPagination)}"></script>
        <style>
             table th{
                font-family: 'Proxima Nova' !important;
                font-size: 15px !important;
            }
            .pagination {
                display: inline-block;
                padding-left: 0;
                margin: 20px 0;
                border-radius: 4px;
            }

            .pagination>li {
                display: inline;
            }

            .pagination>li>a,
            .pagination>li>span {
                position: relative;
                float: left;
                padding: 6px 12px;
                margin-left: -1px;
                line-height: 1.42857143;
                color: #0176d3;
                text-decoration: none;
                background-color: #fff;
                border: 1px solid #ddd;
            }

            .pagination>li:first-child>a,
            .pagination>li:first-child>span {
                margin-left: 0;
                border-top-left-radius: 4px;
                border-bottom-left-radius: 4px;
            }

            .pagination>.disabled>a,
            .pagination>.disabled>a:focus,
            .pagination>.disabled>a:hover,
            .pagination>.disabled>span,
            .pagination>.disabled>span:focus,
            .pagination>.disabled>span:hover {
                color: rgb(167, 162, 162);
                cursor: not-allowed;
                background-color: #fff;
                border-color: #ddd;
            }

            .pagination>.disabled>a,
            .pagination>.disabled>a:focus,
            .pagination>.disabled>a:hover,
            .pagination>.disabled>span,
            .pagination>.disabled>span:focus,
            .pagination>.disabled>span:hover {
                color: #0176d3;
                cursor: not-allowed;
                background-color: #fff;
                border-color: #ddd;
            }

            .pagination>.active>a,
            .pagination>.active>a:focus,
            .pagination>.active>a:hover,
            .pagination>.active>span,
            .pagination>.active>span:focus,
            .pagination>.active>span:hover {
                z-index: 3;
                color: #fff;
                cursor: default;
                background-color: #0176d3;
                ;
                border-color: #0176d3;
                ;
            }

            .spinner-background {
                width: 100%;
                height: 100%;
                background: #000;
                opacity: 0.4;
                top: 0px;
                left: 0px;
                position: fixed;
                z-index: 1000000;
            }

            .spinner-load {
                position: fixed;
                top: 49%;
                left: 49%;
                z-index: 1000000;
            }
            
            .driver-name-td{
                text-align: left !important;
            }

            .slds-table thead th {
                line-height: 1 !important;
                text-align: center;
            }

            .slds-table td{
                text-align: center;
            }
            .slds-context-bar_tab {
                background-color: aliceblue !important;
            }

            .cursor-pointer {
                cursor: pointer;
            }

            .slds-selected {
                font-weight: 600;
            }

            .slds-table .slds-cell-edit td {
                box-shadow: rgb(0 68 135) 0 0 0 1px inset;
            }

            .slds-modal__close {
                position: relative !important;
                top: 0 !important;
                right: -38.5rem !important;
            }

            .slds-col-label {
                padding-bottom: calc(.175rem + 1px);
                margin-bottom: 0;
                font-size: inherit;
                line-height: 1.5;
                font-size: 16px;
                padding-top: calc(.175rem + 1px);
            }

            .d-none{
                display: none;
            }
            .d-block{
                display: block;
            }
            .align-content {
                text-align: center;
                margin-top: 35px;
            }

            .span-error {
                color: red;
            }

            .float {
                z-index: 1;
                box-shadow: 2px 2px 3px #999 !important;
                text-align: center;
            }

            .slds-form-element__label{
                color: #000 !important;
            }

            .slds-table td{
                font-size: 14px !important;
            }
            .slds-button_brand {
                background-color: #404b5b!important;
                border-color: #404b5b!important;
                color: #fff !important;
            }
        </style>
        <!-- Common script -->
        <script type="text/javascript">
            $(document).ready(function () {
                $(".date").keypress(function (e) {
                    var keyCode = e.which;
                    /*
                    8 - (backspace)
                    32 - (space)
                    48-57 - (0-9)Numbers
                    */
                    if ((keyCode != 8 || keyCode ==32 ) && (keyCode < 48 || keyCode > 57 || keyCode>=48 || keyCode<=57)) {
                        return false;
                    }
                });
            })
            var app = angular.module('updateInsuranceModule', ['angularUtils.directives.dirPagination']);
            app.controller('updateInsuranceController', ['$scope',
                function ($scope) {
                    $scope.waiting = false;
                    $scope.selectedRow = null;
                    $scope.currentPage = 1;
                    $scope.pageSize = 20;
                    $scope.insuranceList = {!conWrapper}
                  console.log("From List-> ", {!conWrapper});
            $scope.showError = false;
            $scope.IsVisibleUpdatebtn = false;
            $scope.updateInsuranceList = [];
            var beforeUpdateInsurance = [];
            /* Toaster Option */
            this.setOptions = function () {
                toastr.options.positionClass = "toast-bottom-right";
                toastr.options.closeButton = true;
                toastr.options.progressBar = true;
                toastr.options.fadeOut = 2500;
            };

            this.setOptions();
            this.clear = function () {
                toastr.clear();
            };
            /* Toaster Option Complete with clear funtion */
            $scope.editInsurance = function (insurance, cId) {
                $scope.selectedRow = cId;
                $scope.IsVisibleUpdatebtn = true;
                if (beforeUpdateInsurance.length == 0) {
                    beforeUpdateInsurance = angular.copy($scope.insuranceList);
                }
            }

            /** Reloads the page **/
            $scope.refreshList = function () {
                $scope.$apply(function () {
                    location.reload();
                });
            }

            $scope.currentLevelDateClick = function(event){
                $(`#currentLeval${event.$index}`).datepicker({
                    dateFormat: "mm/dd/yy",
                    maxDate: new Date($(`#expirationDate${event.$index}`).val())
                }).datepicker("show");
            }
            $scope.changeInput = function(event){
               $(`#expirationDate${event.$index}`).datepicker({
                    dateFormat: "mm/dd/yy",
                    minDate: new Date($(`#currentLeval${event.$index}`).val())
                }).datepicker("show");
            }
            /** Update Record **/
            $scope.update = function () {
                if ($scope.updateInsuranceList.length > 0) {
                    angular.forEach($scope.updateInsuranceList, function (kItem) {
                        kItem.vehicleAge = (kItem.vehicleAge === "false") ? false : (kItem.vehicleAge === "true") ? true : kItem.vehicleAge;
                        kItem.vehicleValue = (kItem.vehicleValue === "false") ? false : (kItem.vehicleValue === "true") ? true : kItem.vehicleValue;
                        kItem.meetingMinimum = (kItem.meetingMinimum === undefined) ? true : kItem.meetingMinimum;
                    });
                    var listToUpdate = angular.copy($scope.updateInsuranceList);
                    $scope.waiting = true;
                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.UpdateInsuranceDataController.editInlineNewEmployee}', JSON.stringify(listToUpdate),
                        function (result, event) {
                            if (event.status) {
                                if (result === 'Success') {
                                    beforeUpdateInsurance = [];
                                    toastr.success("Records Updated Successfully");
                                    angular.forEach($scope.updateInsuranceList, function (ulist) {
                                        ulist.isEditable = false;
                                    });
                                    $scope.updateInsuranceList = [];
                                    $scope.IsVisibleUpdatebtn = false;
                                    $scope.selectedRow = '';
                                    $scope.waiting = false;
                                    $scope.$apply();
                                    $scope.refreshList();
                                } else {
                                    toastr.error("Server Error Occured");
                                    $scope.waiting = false;
                                }
                            } else {
                                toastr.error("Server Error Occured");
                                $scope.waiting = false;
                            }
                        },
                        { escape: false }
                    );
                } else {
                    toastr.error("Please edit atleast one record to Update");
                }

            }

            /** Insurance radio button change **/
            $scope.radioChange = function (target) {
                $scope.insurancefoundindex = -1;
                if ($scope.updateInsuranceList.length > 0) {
                    for (var i = 0; i < $scope.updateInsuranceList.length; i++) {
                        if ($scope.updateInsuranceList[i].contactId === target.list.contactId) {
                            $scope.insurancefoundindex = i;
                            break;
                        }
                    }

                    if ($scope.insurancefoundindex != -1) {
                        $scope.updateInsuranceList.remove($scope.insurancefoundindex);
                    }
                    else {
                        $scope.updateInsuranceList.push(target.list);
                    }

                } else {
                    $scope.updateInsuranceList.push(target.list);
                }

                //$scope.updateInsuranceList.push(target.list);
                console.log($scope.updateInsuranceList)
            }

            /** Vehicle Age Radio Button Change **/
            $scope.vehicleAgeChange = function (target) {
                $scope.recordfoundindex = -1;
                if ($scope.updateInsuranceList.length > 0) {
                    for (var i = 0; i < $scope.updateInsuranceList.length; i++) {
                        if ($scope.updateInsuranceList[i].contactId === target.list.contactId) {
                            $scope.recordfoundindex = i;
                            break;
                        }
                    }

                    if ($scope.recordfoundindex != -1) {
                        $scope.updateInsuranceList.remove($scope.recordfoundindex);
                    }

                    else {
                        $scope.updateInsuranceList.push(target.list);
                    }
                } else {
                    $scope.updateInsuranceList.push(target.list);
                }

                //$scope.updateInsuranceList.push(target.list);
                console.log($scope.updateInsuranceList)
            }

            /** Vehicle Value Radio Button Change **/
            $scope.vehicleChange = function (target) {
                $scope.vehiclefoundindex = -1;
                if ($scope.updateInsuranceList.length > 0) {
                    for (var i = 0; i < $scope.updateInsuranceList.length; i++) {
                        if ($scope.updateInsuranceList[i].contactId === target.list.contactId) {
                            $scope.vehiclefoundindex = i;
                            break;
                        }
                    }

                    if ($scope.vehiclefoundindex != -1) {
                        $scope.updateInsuranceList.remove($scope.vehiclefoundindex);
                    }

                    else {
                        $scope.updateInsuranceList.push(target.list);
                    }
                } else {
                    $scope.updateInsuranceList.push(target.list);
                }
                //  updatelist.vehicleAge = (target.list.vehicleAge === "No") ? false : true;
                //$scope.updateInsuranceList.push(target.list);
                console.log($scope.updateInsuranceList)
            }

            /** Date Input Validation **/
            $scope.inputExpirationDate = function(lt){
                var inputDate = lt.list.expirationDate;
                var regex = /(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\d\d/
                if (!inputDate.match(regex) && inputDate != "") {
                    document.getElementById(`span-error-exp${lt.$index}`).classList.remove('d-none');
                } else {
                    document.getElementById(`span-error-exp${lt.$index}`).classList.add('d-none');
                    lt.list.expirationDate = (lt.list.expirationDate === "") ? null : lt.list.expirationDate;
                    $scope.inputfoundindex = -1;
                    if ($scope.updateInsuranceList.length > 0) {
                        for (var i = 0; i < $scope.updateInsuranceList.length; i++) {
                            if ($scope.updateInsuranceList[i].contactId === lt.list.contactId) {
                                $scope.inputfoundindex = i;
                                break;
                            }
                        }

                        if ($scope.inputfoundindex != -1) {
                            $scope.updateInsuranceList.remove($scope.inputfoundindex);
                        }

                        else {
                            $scope.updateInsuranceList.push(lt.list);
                        }
                    } else {
                        $scope.updateInsuranceList.push(lt.list);
                    }
                }
            }
            $scope.inputLevelDate = function (ld) {
                    var input = ld.list.currentLeval;
                    var pattern = /(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\d\d/
                    if (!input.match(pattern) && input != "") {
                        document.getElementById(`span-error${ld.$index}`).classList.remove('d-none');
                    } else {
                        document.getElementById(`span-error${ld.$index}`).classList.add('d-none');
                        ld.list.currentLeval = (ld.list.currentLeval === "") ? null : ld.list.currentLeval;
                        $scope.currentfoundindex = -1;
                        if ($scope.updateInsuranceList.length > 0) {
                            for (var i = 0; i < $scope.updateInsuranceList.length; i++) {
                                if ($scope.updateInsuranceList[i].contactId === ld.list.contactId) {
                                    $scope.currentfoundindex = i;
                                    break;
                                }
                            }

                            if ($scope.currentfoundindex != -1) {
                                $scope.updateInsuranceList.remove($scope.currentfoundindex);
                            }

                            else {
                                $scope.updateInsuranceList.push(ld.list);
                            }
                        } else {
                            $scope.updateInsuranceList.push(ld.list);
                        }
                    }
                }
            $scope.inputValid = function (lt) {
                var input = lt.list.currentLeval;
                var pattern = /([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))/
                if (!input.match(pattern) && input != "") {
                    $scope.showError = true;
                } else {
                    lt.list.currentLeval = (lt.list.currentLeval === "") ? null : lt.list.currentLeval;
                    lt.list.expirationDate = (lt.list.expirationDate === "") ? null : lt.list.expirationDate;
                    $scope.showError = false;
                    $scope.inputfoundindex = -1;
                    if ($scope.updateInsuranceList.length > 0) {
                        for (var i = 0; i < $scope.updateInsuranceList.length; i++) {
                            if ($scope.updateInsuranceList[i].contactId === lt.list.contactId) {
                                $scope.inputfoundindex = i;
                                break;
                            }
                        }

                        if ($scope.inputfoundindex != -1) {
                            $scope.updateInsuranceList.remove($scope.inputfoundindex);
                        }

                        else {
                            $scope.updateInsuranceList.push(lt.list);
                        }
                    } else {
                        $scope.updateInsuranceList.push(lt.list);
                    }
                }
            }

            $scope.meetingMinimumChange = function(m){
                $scope.meetingfoundindex = -1;
                if ($scope.updateInsuranceList.length > 0) {
                    for (var i = 0; i < $scope.updateInsuranceList.length; i++) {
                        if ($scope.updateInsuranceList[i].contactId === m.list.contactId) {
                            $scope.meetingfoundindex = i;
                            break;
                        }
                    }

                    if ($scope.meetingfoundindex != -1) {
                        $scope.updateInsuranceList.remove($scope.meetingfoundindex);
                    }

                    else {
                        $scope.updateInsuranceList.push(m.list);
                    }
                } else {
                    $scope.updateInsuranceList.push(m.list);
                }
                console.log($scope.updateInsuranceList)
                console.log("meeting minimum change", m)
            }
            /** Cancel Update Process **/
            $scope.cancelUpdate = function () {
                $scope.waiting = true;
                $scope.selectedRow = '';
                angular.forEach(beforeUpdateInsurance, function (inList) {
                    inList.isEditable = false;
                });
                $scope.IsVisibleUpdatebtn = false;
                $scope.insuranceList = angular.copy(beforeUpdateInsurance);
                $scope.waiting = false;
            }
                }
              ]);
        </script>
    </head>

    <body class="slds-scope" ng-app="updateInsuranceModule" ng-controller="updateInsuranceController" ng-cloak="true">
        <div id="spinner" ng-show="waiting">
            <div class="spinner-background"></div>
            <div class="spinner-load">
                <div class="spinner-border text-light" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
        </div>
        <div class="slds-container">
            <div class="slds-context-bar slds-context-bar_tab">
                <div class="slds-context-bar__primary">
                    <div class="slds-context-bar__item slds-context-bar__dropdown-trigger slds-dropdown-trigger slds-dropdown-trigger_click slds-no-hover">
                        <span class="slds-context-bar__label-action slds-context-bar__app-name">
                            <!-- <img alt="logo" class="img-fluid"
                                    src="{!URlFOR($Resource.EmcCSS, '/emc-design/assets/images/logo/mBurse-logo_rev.png')}"/> -->
                        </span>
                    </div>
                    <span class="slds-context-bar__label-action slds-context-bar__app-name">
                        <span class="slds-truncate" title="Update Insurance">Update Insurance</span>
                    </span>
                </div>
            </div>
            <div class="slds-box">
                <!-- <input type="text" id="currentLevelDate" /> -->
                <table class="slds-table slds-table_cell-buffer slds-table_bordered slds-table_striped slds-table_col-bordered slds-border_right slds-border_left">
                    <thead>
                        <tr class="slds-line-height_reset">
                            <th>Driver Name</th>
                            <th>Insurance (100/300/50)</th>
                            <th>Meeting Minimum</th>
                            <th>Current Level</th>
                            <th>Expiration Date</th>
                            <th><div>Vehicle Value</div> <div>($25,442)</div></th>
                            <th><div>Vehicle Age</div> <div>(5 yrs)</div></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr dir-paginate="list in insuranceList | itemsPerPage: pageSize" current-page="currentPage" ng-class="{'slds-selected slds-cell-edit slds-is-edited':list.contactId == selectedRow}">
                            <td class="driver-name-td">{{list.name}}</td>
                            <td ng-model="list.insurance" ng-show="!list.isEditable" ng-click="editInsurance(insurance,list.contactId);list.isEditable = !list.isEditable"
                             class="cursor-pointer">
                                <span class="slds-radio">
                                    <input type="radio" id="yes-insurance" name="edit-{{$index}}" ng-model="list.insurance" ng-checked="{{list.insurance == 'Yes'}}"
                                     disabled="true" />
                                    <label class="slds-radio__label" for="yes-insurance">
                                        <span class="slds-radio_faux"></span>
                                        <span class="slds-form-element__label">Yes</span>
                                    </label>
                                </span>
                                <span class="slds-radio">
                                    <input type="radio" id="no-insurance" name="edit-{{$index}}" ng-model="list.insurance" ng-checked="{{list.insurance == 'No'}}"
                                     disabled="true" />
                                    <label class="slds-radio__label" for="no-insurance">
                                        <span class="slds-radio_faux"></span>
                                        <span class="slds-form-element__label">No</span>
                                    </label>
                                </span>
                                <span class="slds-radio">
                                    <input type="radio" id="not-insurance" name="edit-{{$index}}" ng-model="list.insurance" ng-checked="{{list.insurance == 'Not Submitted'}}"
                                     disabled="true" />
                                    <label class="slds-radio__label" for="not-insurance">
                                        <span class="slds-radio_faux"></span>
                                        <span class="slds-form-element__label">Not Submitted</span>
                                    </label>
                                </span>
                            </td>
                            <td ng-model="list.insurance" ng-show="list.isEditable" class="">
                                <span class="slds-radio">
                                    <input type="radio" id="yes-insurance-{{$index}}" name="insure-{{$index}}" ng-change="radioChange(this)" value="Yes" ng-model="list.insurance"
                                     ng-checked="{{list.insurance == 'Yes'}}" />
                                    <label class="slds-radio__label" for="yes-insurance-{{$index}}">
                                        <span class="slds-radio_faux"></span>
                                        <span class="slds-form-element__label">Yes</span>
                                    </label>
                                </span>
                                <span class="slds-radio">
                                    <input type="radio" id="no-insurance-{{$index}}" name="insure-{{$index}}" ng-change="radioChange(this)" value="No" ng-model="list.insurance"
                                     ng-checked="{{list.insurance == 'No'}}" />
                                    <label class="slds-radio__label" for="no-insurance-{{$index}}">
                                        <span class="slds-radio_faux"></span>
                                        <span class="slds-form-element__label">No</span>
                                    </label>
                                </span>
                                <span class="slds-radio">
                                    <input type="radio" id="not-insurance-{{$index}}" ng-change="radioChange(this)" name="insure-{{$index}}" value="Not Submitted"
                                     ng-model="list.insurance" ng-checked="{{list.insurance == 'Not Submitted'}}" />
                                    <label class="slds-radio__label" for="not-insurance-{{$index}}">
                                        <span class="slds-radio_faux"></span>
                                        <span class="slds-form-element__label">Not Submitted</span>
                                    </label>
                                </span>
                            </td>
                            <td ng-model="list.meetingMinimum" ng-show="!list.isEditable" ng-click="editInsurance(list,list.contactId);list.isEditable = !list.isEditable"  class="cursor-pointer">
                                    <span class="slds-radio">
                                        <input type="radio" id="meeting"  name="meetEdit-{{$index}}" ng-model="list.meetingMinimum" ng-checked="{{list.meetingMinimum}}"  disabled="true"/>
                                        <label class="slds-radio__label" for="meeting">
                                            <span class="slds-radio_faux"></span>
                                          </label>
                                      </span>
                            </td>
                            <td ng-model="list.meetingMinimum"  ng-show="list.isEditable">
                                <span class="slds-radio">
                                    <input type="radio" id="meeting-{{$index}}" name="meet-{{$index}}" ng-model="list.meetingMinimum" ng-checked="{{list.meetingMinimum}}"
                                    ng-change="meetingMinimumChange(this)"/>
                                    <label class="slds-radio__label" for="meeting-{{$index}}">
                                        <span class="slds-radio_faux"></span>
                                    </label>
                                </span>
                            </td>
                            <td ng-model="list.currentLeval" ng-show="!list.isEditable" ng-click="editInsurance(list,list.contactId);list.isEditable = !list.isEditable"
                             class="cursor-pointer">{{list.currentLeval  | date:"MM/dd/yyyy"}}</td>
                            <td ng-model="list.currentLeval" ng-show="list.isEditable">
                                <input type="text" class="slds-selected date" id="currentLeval{{$index}}" value="{{list.currentLeval}}" ng-model="list.currentLeval" 
                                ng-click="currentLevelDateClick(this)" ng-change="inputLevelDate(this)" placeholder="Select Date" />
                                <span class="span-error d-none" id="span-error{{$index}}">Invalid Date</span>
                            </td>
                            <td ng-model="list.expirationDate" ng-show="!list.isEditable" ng-click="editInsurance(list,list.contactId);list.isEditable = !list.isEditable"
                             class="cursor-pointer">{{list.expirationDate  | date:"MM/dd/yyyy"}}</td>
                            <td ng-model="list.expirationDate" ng-show="list.isEditable">
                                <input type="text" class="slds-selected date" id="expirationDate{{$index}}" value="{{list.expirationDate}}" ng-model="list.expirationDate"
                                 ng-click="changeInput(this)" ng-change="inputExpirationDate(this)" placeholder="Select Date"/>
                                 <span class="span-error d-none" id="span-error-exp{{$index}}">Invalid Date</span>
                            </td>
                            <td ng-model="list.vehicleValue" ng-show="!list.isEditable" ng-click="editInsurance(insurance,list.contactId);list.isEditable = !list.isEditable"
                             class="cursor-pointer">
                                <span class="slds-radio">
                                    <input type="radio" id="yes-vehicle-value" ng-model="list.vehicleValue" ng-checked="{{list.vehicleValue}}" name="default-{{$index}}"
                                     disabled="true" />
                                    <label class="slds-radio__label" for="yes-vehicle-value">
                                        <span class="slds-radio_faux"></span>
                                        <span class="slds-form-element__label">Yes</span>
                                    </label>
                                </span>
                                <span class="slds-radio">
                                    <input type="radio" id="no-vehicle-value" ng-model="list.vehicleValue" ng-checked="{{list.vehicleValue == false}}" name="default-{{$index}}"
                                     disabled="true" />
                                    <label class="slds-radio__label" for="no-vehicle-value">
                                        <span class="slds-radio_faux"></span>
                                        <span class="slds-form-element__label">No</span>
                                    </label>
                                </span>
                            </td>
                            <td ng-model="list.vehicleValue" ng-show="list.isEditable">
                                <span class="slds-radio">
                                    <input type="radio" id="yes-vehicle-value-{{$index}}" ng-model="list.vehicleValue" name="vehval-{{$index}}" ng-change="vehicleChange(this)"
                                     ng-checked="{{list.vehicleValue}}" value="true" />
                                    <label class="slds-radio__label" for="yes-vehicle-value-{{$index}}">
                                        <span class="slds-radio_faux"></span>
                                        <span class="slds-form-element__label">Yes</span>
                                    </label>
                                </span>
                                <span class="slds-radio">
                                    <input type="radio" id="no-vehicle-value-{{$index}}" ng-model="list.vehicleValue" ng-checked="{{list.vehicleValue == false}}"
                                     ng-change="vehicleChange(this)" name="vehval-{{$index}}" value="false" />
                                    <label class="slds-radio__label" for="no-vehicle-value-{{$index}}">
                                        <span class="slds-radio_faux"></span>
                                        <span class="slds-form-element__label">No</span>
                                    </label>
                                </span>
                            </td>
                            <td ng-model="list.vehicleAge" ng-show="!list.isEditable" ng-click="editInsurance(insurance,list.contactId);list.isEditable = !list.isEditable"
                             class="cursor-pointer">
                                <span class="slds-radio">
                                    <input type="radio" id="yes-vehicle-age" name="vage-{{$index}}" ng-model="list.vehicleAge" ng-checked="{{list.vehicleAge == true}}"
                                     disabled="true" />
                                    <label class="slds-radio__label" for="yes-vehicle-age">
                                        <span class="slds-radio_faux"></span>
                                        <span class="slds-form-element__label">Yes</span>
                                    </label>
                                </span>
                                <span class="slds-radio">
                                    <input type="radio" id="no-vehicle-age" name="vage-{{$index}}" ng-model="list.vehicleAge" ng-checked="{{list.vehicleAge == false}}"
                                     disabled="true" />
                                    <label class="slds-radio__label" for="no-vehicle-age">
                                        <span class="slds-radio_faux"></span>
                                        <span class="slds-form-element__label">No</span>
                                    </label>
                                </span>
                            </td>
                            <td ng-model="list.vehicleAge" ng-show="list.isEditable">
                                <span class="slds-radio">
                                    <input type="radio" id="yes-vehicle-age-{{$index}}" name="vehicleage-{{$index}}" ng-model="list.vehicleAge" ng-change="vehicleAgeChange(this)"
                                     ng-checked="{{list.vehicleAge == true}}" value="true" />
                                    <label class="slds-radio__label" for="yes-vehicle-age-{{$index}}">
                                        <span class="slds-radio_faux"></span>
                                        <span class="slds-form-element__label">Yes</span>
                                    </label>
                                </span>
                                <span class="slds-radio">
                                    <input type="radio" id="no-vehicle-age-{{$index}}" name="vehicleage-{{$index}}" ng-model="list.vehicleAge" ng-change="vehicleAgeChange(this)"
                                     ng-checked="{{list.vehicleAge == false}}" value="false" />
                                    <label class="slds-radio__label" for="no-vehicle-age-{{$index}}">
                                        <span class="slds-radio_faux"></span>
                                        <span class="slds-form-element__label">No</span>
                                    </label>
                                </span>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="slds-p-top_x-large">
                    <dir-pagination-controls max-size="1" direction-links="true" boundary-links="true" responsive="true" auto-hide="false"></dir-pagination-controls>
                </div>
                <div class="slds-float_right slds-p-top_x-large slds-p-bottom_x-large">
                    <button aria-expanded="true" class="slds-button float slds-button_neutral slds-button_dual-stateful slds-is-pressed" ng-click="update();"
                     ng-show="IsVisibleUpdatebtn">
                        <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                            <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#record_update')}"></use>
                        </svg>
                        <span class="slds-truncate" title="Update List">Update</span>
                    </button>
                    <button aria-expanded="true" class="slds-button float slds-button_brand slds-button_dual-stateful slds-is-pressed" ng-click="cancelUpdate();"
                     ng-show="IsVisibleUpdatebtn">
                        <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                            <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                        </svg>
                        <span class="slds-truncate" title="Cancel">Cancel</span>
                    </button>
                </div>
            </div>
        </div>
    </body>

    </html>
</apex:page>