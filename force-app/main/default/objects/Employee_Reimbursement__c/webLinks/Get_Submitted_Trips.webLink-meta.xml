<?xml version="1.0" encoding="UTF-8"?>
<WebLink xmlns="http://soap.sforce.com/2006/04/metadata">
    <fullName>Get_Submitted_Trips</fullName>
    <availability>online</availability>
    <displayType>button</displayType>
    <linkType>javascript</linkType>
    <masterLabel>Get Submitted Trips</masterLabel>
    <openType>onClickJavaScript</openType>
    <protected>false</protected>
    <url>{!REQUIRESCRIPT(&quot;/soap/ajax/15.0/connection.js&quot;)}
{!REQUIRESCRIPT(&quot;/soap/ajax/15.0/apex.js&quot;)}

var status = &apos;{!Employee_Reimbursement__c.Status__c}&apos;;
var approvalDate = &apos;{!Employee_Reimbursement__c.Approved_Date__c}&apos;;
if(status == &apos;Approved&apos; || approvalDate != &apos;&apos;){
alert(&apos;Please change the status to Pending and remove Approval Date!!&apos;);
}

else {
var todayDate = &apos;{!Employee_Reimbursement__c.Month__c}&apos;;
var str = todayDate.split(&quot;-&quot;);
var priMin = str[1]+&apos;-&apos;+str[0]+&apos;-1&apos;;
var lastDayOfMonth = new Date(str[1], str[0], 0);
var priMax = str[1]+&apos;-&apos;+str[0]+&apos;-&apos;+lastDayOfMonth.getDate();
//var priMin = &apos;2020-08-28&apos;;
//var priMax = &apos;2020-08-31&apos;;
var fuel,
fuel = &apos;{!Employee_Reimbursement__c.Fuel_Price__c}&apos;;
if (fuel != &quot;&quot;) {
var fuelstr = fuel.split(&quot;$&quot;);
fuel = fuelstr[1];
}
maintenansAndTires = &apos;{!Employee_Reimbursement__c.Maintenance_and_Tires__c}&apos;;
if (maintenansAndTires != &quot;&quot;) {
var matstr = maintenansAndTires.split(&quot;$&quot;);
maintenansAndTires = matstr[1];
}
var accounts = sforce.connection.query(&quot;SELECT id, Name,Contact_Id__c, Contact_Id__r.Account.Triplog_API__c FROM Employee_Reimbursement__c WHERE id = &apos;{!Employee_Reimbursement__c.Id}&apos;&quot;);
var apiToken = accounts.records.Contact_Id__r.Account.Triplog_API__c;
var contactids=accounts.records.Contact_Id__c;
if(apiToken != null &amp;&amp; apiToken != &apos;&apos;) {

sforce.apex.execute(&quot;GetTripCallout&quot;,&quot;GetTripCalloutForMileage&quot;,{empReID:&apos;{!Employee_Reimbursement__c.Id}&apos;, contactEmail:&apos;{!Employee_Reimbursement__c.Contact_Email__c}&apos;,contactid:contactids,priMin:priMin,priMax:priMax, fuel:fuel, mpg:&apos;{!Employee_Reimbursement__c.MPG__c}&apos;, maintenansAndTires:maintenansAndTires, apiToken:apiToken, tripStatus:&apos;S&apos;,putCall:true});
location.reload(true);
} else {
alert(&apos;Please fill Account API Token&apos;);
}
}</url>
</WebLink>
